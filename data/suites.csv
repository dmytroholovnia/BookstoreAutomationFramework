"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Sun Jun 29 09:19:19 UTC 2025","Sun Jun 29 09:19:19 UTC 2025","352","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [9]  , BookDto(id=956, title=null, description=Fiction in verse, pageCount=899, excerpt=Classic, publishDate=2025-06-29T09:19:19.318227105Z)",""
"broken","Sun Jun 29 09:19:19 UTC 2025","Sun Jun 29 09:19:19 UTC 2025","370","","BooksTests","","BooksTests","getInvalidFormatBookIdTest","GET - get book with invalid format of id Param: <script>alert(1)</script>",""
"broken","Sun Jun 29 09:19:22 UTC 2025","Sun Jun 29 09:19:22 UTC 2025","367","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [28] <script>alert(1)</script>, BookDto(id=720, title=Paths of Glory, description=Mythopoeia, pageCount=null, excerpt=Crime/Detective, publishDate=2025-06-29T09:19:22.230225931Z)",""
"failed","Sun Jun 29 09:19:10 UTC 2025","Sun Jun 29 09:19:10 UTC 2025","369","","BooksTests","","BooksTests","postBookExceptionalTest","POST - create book with invalid payload [5] BookDto(id=433, title=Blithe Spirit, description=Horror, pageCount=934, excerpt=null, publishDate=2025-06-29T09:19:08.572081515Z)",""
"passed","Sun Jun 29 09:19:13 UTC 2025","Sun Jun 29 09:19:13 UTC 2025","375","","AuthorTests","","AuthorTests","getInvalidFormatAuthorIdTest","GET - get author with invalid format of id Param: null",""
"broken","Sun Jun 29 09:19:12 UTC 2025","Sun Jun 29 09:19:13 UTC 2025","347","","AuthorTests","","AuthorTests","getInvalidFormatAuthorIdTest","GET - get author with invalid format of id Param: <script>alert(1)</script>",""
"passed","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","390","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [24] 1=1, AuthorDto(id=628, idBook=null, firstName=Noel, lastName=Schneider)",""
"passed","Sun Jun 29 09:19:25 UTC 2025","Sun Jun 29 09:19:25 UTC 2025","388","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [37] null, BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"passed","Sun Jun 29 09:19:15 UTC 2025","Sun Jun 29 09:19:15 UTC 2025","372","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [1] h, AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:07 UTC 2025","Sun Jun 29 09:19:08 UTC 2025","372","","AuthorTests","","AuthorTests","deleteAuthorExceptionTest","DELETE - delete author with invalid param [6] 1=1",""
"failed","Sun Jun 29 09:19:10 UTC 2025","Sun Jun 29 09:19:12 UTC 2025","1609","","BooksTests","","BooksTests","postBookTest","POST - create new book",""
"passed","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","356","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [27] null, AuthorDto(id=279, idBook=22, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:15 UTC 2025","Sun Jun 29 09:19:15 UTC 2025","376","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [15] `, AuthorDto(id=198, idBook=874, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:08 UTC 2025","Sun Jun 29 09:19:09 UTC 2025","361","","AuthorTests","","AuthorTests","deleteAuthorExceptionTest","DELETE - delete author with invalid param [1] a",""
"passed","Sun Jun 29 09:19:10 UTC 2025","Sun Jun 29 09:19:10 UTC 2025","508","","AuthorTests","","AuthorTests","getAllAuthorsTest","GET - get all authors test",""
"passed","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","349","","BooksTests","","BooksTests","deleteBookExceptionTest","DELETE - delete book with invalid param [7] null",""
"passed","Sun Jun 29 09:19:08 UTC 2025","Sun Jun 29 09:19:09 UTC 2025","363","","AuthorTests","","AuthorTests","postAuthorExceptionalTest","POST - create author with invalid payload [2] AuthorDto(id=null, idBook=350, firstName=Orville, lastName=Monahan)",""
"broken","Sun Jun 29 09:19:22 UTC 2025","Sun Jun 29 09:19:23 UTC 2025","340","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [30] <script>alert(1)</script>, BookDto(id=229, title=Pale Kings and Princes, description=Science fiction, pageCount=207, excerpt=Tall tale, publishDate=null)",""
"passed","Sun Jun 29 09:19:09 UTC 2025","Sun Jun 29 09:19:09 UTC 2025","378","","AuthorTests","","AuthorTests","deleteAuthorExceptionTest","DELETE - delete author with invalid param [2]  ",""
"passed","Sun Jun 29 09:19:24 UTC 2025","Sun Jun 29 09:19:24 UTC 2025","364","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [33] 1=1, BookDto(id=35, title=null, description=Historical fiction, pageCount=566, excerpt=Metafiction, publishDate=2025-06-29T09:19:23.314641304Z)",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","346","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [11]  , BookDto(id=373, title=Absalom, Absalom!, description=Folklore, pageCount=554, excerpt=null, publishDate=2025-06-29T09:19:19.318359524Z)",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","367","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [8]  , BookDto(id=null, title=A Darkling Plain, description=Tall tale, pageCount=55, excerpt=Legend, publishDate=2025-06-29T09:19:19.318153577Z)",""
"passed","Sun Jun 29 09:19:13 UTC 2025","Sun Jun 29 09:19:13 UTC 2025","350","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [9] -1462254736, AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:19 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","371","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [7]  , BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"passed","Sun Jun 29 09:19:19 UTC 2025","Sun Jun 29 09:19:19 UTC 2025","366","","BooksTests","","BooksTests","getInvalidFormatBookIdTest","GET - get book with invalid format of id Param: =",""
"broken","Sun Jun 29 09:19:16 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","376","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [19] <script>alert(1)</script>, AuthorDto(id=33, idBook=45, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","339","","BooksTests","","BooksTests","getInvalidFormatBookIdTest","GET - get book with invalid format of id Param: null",""
"broken","Sun Jun 29 09:19:16 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","345","","BooksTests","","BooksTests","deleteBookExceptionTest","DELETE - delete book with invalid param [3] -29670631",""
"passed","Sun Jun 29 09:19:13 UTC 2025","Sun Jun 29 09:19:13 UTC 2025","346","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [10] -1462254736, AuthorDto(id=null, idBook=831, firstName=Chase, lastName=Morar)",""
"passed","Sun Jun 29 09:19:21 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","370","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [22] @, BookDto(id=431, title=Pale Kings and Princes, description=Fanfiction, pageCount=null, excerpt=Mythopoeia, publishDate=2025-06-29T09:19:21.122557201Z)",""
"failed","Sun Jun 29 09:19:05 UTC 2025","Sun Jun 29 09:19:08 UTC 2025","3366","","AuthorTests","","AuthorTests","putAuthorTest","PUT - update author",""
"passed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:19 UTC 2025","376","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [3] x, BookDto(id=10, title=null, description=Mythology, pageCount=502, excerpt=Suspense/Thriller, publishDate=2025-06-29T09:19:17.829125973Z)",""
"passed","Sun Jun 29 09:19:15 UTC 2025","Sun Jun 29 09:19:15 UTC 2025","367","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [16] `, AuthorDto(id=800, idBook=null, firstName=Josephina, lastName=Batz)",""
"passed","Sun Jun 29 09:19:08 UTC 2025","Sun Jun 29 09:19:09 UTC 2025","363","","BooksTests","","BooksTests","postBookExceptionalTest","POST - create book with invalid payload [2] BookDto(id=null, title=Now Sleeps the Crimson Petal, description=Horror, pageCount=837, excerpt=Folklore, publishDate=2025-06-29T09:19:08.571809904Z)",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","323","","BooksTests","","BooksTests","getInvalidFormatBookIdTest","GET - get book with invalid format of id Param: a",""
"passed","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","373","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [25] null, AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"failed","Sun Jun 29 09:19:21 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","346","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [15] -1222453795, BookDto(id=944, title=null, description=Metafiction, pageCount=471, excerpt=Humor, publishDate=2025-06-29T09:19:20.381307545Z)",""
"passed","Sun Jun 29 09:19:08 UTC 2025","Sun Jun 29 09:19:08 UTC 2025","393","","AuthorTests","","AuthorTests","deleteAuthorExceptionTest","DELETE - delete author with invalid param [7] null",""
"passed","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","361","","BooksTests","","BooksTests","deleteBookExceptionTest","DELETE - delete book with invalid param [4] -",""
"passed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","367","","BooksTests","","BooksTests","deleteBookExceptionTest","DELETE - delete book with invalid param [6] 1=1",""
"passed","Sun Jun 29 09:19:12 UTC 2025","Sun Jun 29 09:19:12 UTC 2025","398","","BooksTests","","BooksTests","getNonExistentBookTest","GET - get book with non-existent id",""
"passed","Sun Jun 29 09:19:09 UTC 2025","Sun Jun 29 09:19:09 UTC 2025","357","","AuthorTests","","AuthorTests","postAuthorExceptionalTest","POST - create author with invalid payload [4] AuthorDto(id=571, idBook=null, firstName=Jimmie, lastName=Bernier)",""
"passed","Sun Jun 29 09:19:24 UTC 2025","Sun Jun 29 09:19:24 UTC 2025","372","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [32] 1=1, BookDto(id=null, title=Things Fall Apart, description=Fiction in verse, pageCount=828, excerpt=Folklore, publishDate=2025-06-29T09:19:23.314609004Z)",""
"passed","Sun Jun 29 09:19:23 UTC 2025","Sun Jun 29 09:19:23 UTC 2025","381","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [31] 1=1, BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"passed","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","353","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [1] x, BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"failed","Sun Jun 29 09:19:09 UTC 2025","Sun Jun 29 09:19:09 UTC 2025","380","","BooksTests","","BooksTests","postBookExceptionalTest","POST - create book with invalid payload [3] BookDto(id=444, title=null, description=Mythology, pageCount=164, excerpt=Humor, publishDate=2025-06-29T09:19:08.571899613Z)",""
"passed","Sun Jun 29 09:19:14 UTC 2025","Sun Jun 29 09:19:14 UTC 2025","372","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [12] -1462254736, AuthorDto(id=332, idBook=null, firstName=Patricia, lastName=Osinski)",""
"passed","Sun Jun 29 09:19:24 UTC 2025","Sun Jun 29 09:19:25 UTC 2025","350","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [35] 1=1, BookDto(id=642, title=All Passion Spent, description=Suspense/Thriller, pageCount=902, excerpt=null, publishDate=2025-06-29T09:19:23.314719819Z)",""
"broken","Sun Jun 29 09:19:07 UTC 2025","Sun Jun 29 09:19:07 UTC 2025","408","","AuthorTests","","AuthorTests","deleteAuthorExceptionTest","DELETE - delete author with invalid param [5] <script>alert(1)</script>",""
"broken","Sun Jun 29 09:19:22 UTC 2025","Sun Jun 29 09:19:22 UTC 2025","370","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [25] <script>alert(1)</script>, BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"passed","Sun Jun 29 09:19:24 UTC 2025","Sun Jun 29 09:19:24 UTC 2025","387","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [38] null, BookDto(id=null, title=A Summer Bird-Cage, description=Humor, pageCount=242, excerpt=Tall tale, publishDate=2025-06-29T09:19:24.441584061Z)",""
"passed","Sun Jun 29 09:19:16 UTC 2025","Sun Jun 29 09:19:16 UTC 2025","348","","BooksTests","","BooksTests","deleteBookExceptionTest","DELETE - delete book with invalid param [1] f",""
"passed","Sun Jun 29 09:19:21 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","365","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [16] -1222453795, BookDto(id=195, title=The Little Foxes, description=Classic, pageCount=null, excerpt=Classic, publishDate=2025-06-29T09:19:20.381399438Z)",""
"passed","Sun Jun 29 09:19:14 UTC 2025","Sun Jun 29 09:19:15 UTC 2025","371","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [14] `, AuthorDto(id=null, idBook=515, firstName=Isabelle, lastName=Mills)",""
"broken","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","385","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [20] <script>alert(1)</script>, AuthorDto(id=145, idBook=null, firstName=Dewey, lastName=Wolff)",""
"passed","Sun Jun 29 09:19:24 UTC 2025","Sun Jun 29 09:19:25 UTC 2025","341","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [40] null, BookDto(id=56, title=The World, the Flesh and the Devil, description=Legend, pageCount=null, excerpt=Mythopoeia, publishDate=2025-06-29T09:19:24.441667126Z)",""
"passed","Sun Jun 29 09:19:25 UTC 2025","Sun Jun 29 09:19:25 UTC 2025","367","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [41] null, BookDto(id=664, title=A Time of Gifts, description=Realistic fiction, pageCount=772, excerpt=null, publishDate=2025-06-29T09:19:24.441697503Z)",""
"passed","Sun Jun 29 09:19:12 UTC 2025","Sun Jun 29 09:19:12 UTC 2025","368","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [7]  , AuthorDto(id=851, idBook=524, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:12 UTC 2025","Sun Jun 29 09:19:13 UTC 2025","612","","BooksTests","","BooksTests","getAllBooksTest","GET - get all books test",""
"passed","Sun Jun 29 09:19:06 UTC 2025","Sun Jun 29 09:19:07 UTC 2025","531","","AuthorTests","","AuthorTests","deleteAuthorExceptionTest","DELETE - delete author with invalid param [4] %",""
"passed","Sun Jun 29 09:19:12 UTC 2025","Sun Jun 29 09:19:12 UTC 2025","360","","AuthorTests","","AuthorTests","getInvalidFormatAuthorIdTest","GET - get author with invalid format of id Param: *",""
"broken","Sun Jun 29 09:19:23 UTC 2025","Sun Jun 29 09:19:23 UTC 2025","363","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [27] <script>alert(1)</script>, BookDto(id=758, title=null, description=Western, pageCount=345, excerpt=Mythopoeia, publishDate=2025-06-29T09:19:22.230201906Z)",""
"passed","Sun Jun 29 09:19:13 UTC 2025","Sun Jun 29 09:19:13 UTC 2025","326","","AuthorTests","","AuthorTests","getInvalidFormatAuthorIdTest","GET - get author with invalid format of id Param: 1=1",""
"failed","Sun Jun 29 09:19:13 UTC 2025","Sun Jun 29 09:19:14 UTC 2025","366","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [11] -1462254736, AuthorDto(id=869, idBook=886, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","390","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [28] null, AuthorDto(id=812, idBook=null, firstName=Kindra, lastName=Paucek)",""
"failed","Sun Jun 29 09:19:13 UTC 2025","Sun Jun 29 09:19:15 UTC 2025","1662","","BooksTests","","BooksTests","deleteBookTest","DELETE - delete book test",""
"passed","Sun Jun 29 09:19:08 UTC 2025","Sun Jun 29 09:19:08 UTC 2025","397","","BooksTests","","BooksTests","postBookExceptionalTest","POST - create book with invalid payload [1] BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"passed","Sun Jun 29 09:19:11 UTC 2025","Sun Jun 29 09:19:11 UTC 2025","371","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [4] h, AuthorDto(id=463, idBook=null, firstName=Ellsworth, lastName=Luettgen)",""
"failed","Sun Jun 29 09:19:12 UTC 2025","Sun Jun 29 09:19:12 UTC 2025","350","","AuthorTests","","AuthorTests","getInvalidFormatAuthorIdTest","GET - get author with invalid format of id Param: -1937940428",""
"broken","Sun Jun 29 09:19:22 UTC 2025","Sun Jun 29 09:19:23 UTC 2025","364","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [26] <script>alert(1)</script>, BookDto(id=null, title=The Widening Gyre, description=Legend, pageCount=671, excerpt=Suspense/Thriller, publishDate=2025-06-29T09:19:22.230170056Z)",""
"passed","Sun Jun 29 09:19:25 UTC 2025","Sun Jun 29 09:19:25 UTC 2025","369","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [42] null, BookDto(id=667, title=Waiting for the Barbarians, description=Narrative nonfiction, pageCount=618, excerpt=Crime/Detective, publishDate=null)",""
"failed","Sun Jun 29 09:19:05 UTC 2025","Sun Jun 29 09:19:08 UTC 2025","3484","","BooksTests","","BooksTests","putBookTest","PUT - update book",""
"passed","Sun Jun 29 09:19:16 UTC 2025","Sun Jun 29 09:19:16 UTC 2025","375","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [21] 1=1, AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:13 UTC 2025","Sun Jun 29 09:19:14 UTC 2025","369","","AuthorTests","","AuthorTests","getInvalidFormatAuthorIdTest","GET - get author with invalid format of id Param: p",""
"failed","Sun Jun 29 09:19:14 UTC 2025","Sun Jun 29 09:19:15 UTC 2025","1327","","AuthorTests","","AuthorTests","postAuthorTest","POST - create new author",""
"passed","Sun Jun 29 09:19:11 UTC 2025","Sun Jun 29 09:19:11 UTC 2025","381","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [5]  , AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"broken","Sun Jun 29 09:19:16 UTC 2025","Sun Jun 29 09:19:16 UTC 2025","343","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [17] <script>alert(1)</script>, AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:11 UTC 2025","Sun Jun 29 09:19:12 UTC 2025","369","","AuthorTests","","AuthorTests","getInvalidFormatAuthorIdTest","GET - get author with invalid format of id Param:  ",""
"failed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:19 UTC 2025","367","","BooksTests","","BooksTests","getInvalidFormatBookIdTest","GET - get book with invalid format of id Param: -742637733",""
"passed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","348","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [26] null, AuthorDto(id=null, idBook=743, firstName=Daniela, lastName=Stracke)",""
"passed","Sun Jun 29 09:19:19 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","344","","BooksTests","","BooksTests","getInvalidFormatBookIdTest","GET - get book with invalid format of id Param: 1=1",""
"failed","Sun Jun 29 09:19:09 UTC 2025","Sun Jun 29 09:19:11 UTC 2025","1418","","AuthorTests","","AuthorTests","deleteAuthorTest","DELETE - delete author test",""
"passed","Sun Jun 29 09:19:22 UTC 2025","Sun Jun 29 09:19:22 UTC 2025","372","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [24] @, BookDto(id=562, title=Tender Is the Night, description=Fable, pageCount=392, excerpt=Mythopoeia, publishDate=null)",""
"passed","Sun Jun 29 09:19:21 UTC 2025","Sun Jun 29 09:19:22 UTC 2025","356","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [23] @, BookDto(id=226, title=Cover Her Face, description=Biography/Autobiography, pageCount=286, excerpt=null, publishDate=2025-06-29T09:19:21.122592447Z)",""
"passed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","368","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [5] x, BookDto(id=867, title=I Sing the Body Electric, description=Fantasy, pageCount=115, excerpt=null, publishDate=2025-06-29T09:19:17.829280894Z)",""
"failed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","344","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [17] -1222453795, BookDto(id=781, title=The Lathe of Heaven, description=Fable, pageCount=443, excerpt=null, publishDate=2025-06-29T09:19:20.381445615Z)",""
"passed","Sun Jun 29 09:19:23 UTC 2025","Sun Jun 29 09:19:24 UTC 2025","364","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [34] 1=1, BookDto(id=398, title=That Hideous Strength, description=Fable, pageCount=null, excerpt=Fanfiction, publishDate=2025-06-29T09:19:23.314685425Z)",""
"passed","Sun Jun 29 09:19:15 UTC 2025","Sun Jun 29 09:19:16 UTC 2025","984","","BooksTests","","BooksTests","getBookTest","GET - get book by id test",""
"broken","Sun Jun 29 09:19:05 UTC 2025","Sun Jun 29 09:19:06 UTC 2025","1001","","AuthorTests","","AuthorTests","deleteAuthorExceptionTest","DELETE - delete author with invalid param [3] -1127390740",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","342","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [12]  , BookDto(id=347, title=Ah, Wilderness!, description=Essay, pageCount=847, excerpt=Narrative nonfiction, publishDate=null)",""
"passed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:19 UTC 2025","380","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [6] x, BookDto(id=807, title=Endless Night, description=Fantasy, pageCount=543, excerpt=Historical fiction, publishDate=null)",""
"broken","Sun Jun 29 09:19:23 UTC 2025","Sun Jun 29 09:19:24 UTC 2025","353","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [29] <script>alert(1)</script>, BookDto(id=266, title=That Hideous Strength, description=Legend, pageCount=690, excerpt=null, publishDate=2025-06-29T09:19:22.230244636Z)",""
"passed","Sun Jun 29 09:19:15 UTC 2025","Sun Jun 29 09:19:16 UTC 2025","342","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [2] h, AuthorDto(id=null, idBook=48, firstName=Reggie, lastName=Weissnat)",""
"broken","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","364","","BooksTests","","BooksTests","deleteBookExceptionTest","DELETE - delete book with invalid param [5] <script>alert(1)</script>",""
"failed","Sun Jun 29 09:19:09 UTC 2025","Sun Jun 29 09:19:09 UTC 2025","368","","AuthorTests","","AuthorTests","postAuthorExceptionalTest","POST - create author with invalid payload [3] AuthorDto(id=55, idBook=135, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:24 UTC 2025","Sun Jun 29 09:19:24 UTC 2025","376","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [36] 1=1, BookDto(id=832, title=The Stars' Tennis Balls, description=Fanfiction, pageCount=873, excerpt=Horror, publishDate=null)",""
"passed","Sun Jun 29 09:19:16 UTC 2025","Sun Jun 29 09:19:16 UTC 2025","357","","BooksTests","","BooksTests","deleteBookExceptionTest","DELETE - delete book with invalid param [2]  ",""
"passed","Sun Jun 29 09:19:18 UTC 2025","Sun Jun 29 09:19:18 UTC 2025","379","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [2] x, BookDto(id=null, title=The Wives of Bath, description=Fairy tale, pageCount=976, excerpt=Historical fiction, publishDate=2025-06-29T09:19:17.829032287Z)",""
"passed","Sun Jun 29 09:19:10 UTC 2025","Sun Jun 29 09:19:11 UTC 2025","364","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [3] h, AuthorDto(id=92, idBook=471, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:11 UTC 2025","Sun Jun 29 09:19:11 UTC 2025","369","","AuthorTests","","AuthorTests","getNonExistentAuthorTest","GET - get author with non-existent id",""
"passed","Sun Jun 29 09:19:16 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","375","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [23] 1=1, AuthorDto(id=909, idBook=960, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:09 UTC 2025","Sun Jun 29 09:19:10 UTC 2025","393","","BooksTests","","BooksTests","postBookExceptionalTest","POST - create book with invalid payload [4] BookDto(id=206, title=As I Lay Dying, description=Mythology, pageCount=null, excerpt=Horror, publishDate=2025-06-29T09:19:08.572003799Z)",""
"passed","Sun Jun 29 09:19:08 UTC 2025","Sun Jun 29 09:19:08 UTC 2025","404","","AuthorTests","","AuthorTests","postAuthorExceptionalTest","POST - create author with invalid payload [1] AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:19 UTC 2025","Sun Jun 29 09:19:19 UTC 2025","361","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [4] x, BookDto(id=108, title=Number the Stars, description=Fairy tale, pageCount=null, excerpt=Tall tale, publishDate=2025-06-29T09:19:17.829213217Z)",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","357","","BooksTests","","BooksTests","getInvalidFormatBookIdTest","GET - get book with invalid format of id Param:  ",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","348","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [13] -1222453795, BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"passed","Sun Jun 29 09:19:14 UTC 2025","Sun Jun 29 09:19:14 UTC 2025","403","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [13] `, AuthorDto(id=null, idBook=null, firstName=null, lastName=null)",""
"passed","Sun Jun 29 09:19:25 UTC 2025","Sun Jun 29 09:19:25 UTC 2025","368","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [39] null, BookDto(id=880, title=null, description=Mystery, pageCount=267, excerpt=Speech, publishDate=2025-06-29T09:19:24.441626189Z)",""
"passed","Sun Jun 29 09:19:21 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","375","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [19] @, BookDto(id=null, title=null, description=null, pageCount=null, excerpt=null, publishDate=null)",""
"passed","Sun Jun 29 09:19:09 UTC 2025","Sun Jun 29 09:19:10 UTC 2025","878","","AuthorTests","","AuthorTests","getAuthorTest","GET - get author by id",""
"passed","Sun Jun 29 09:19:20 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","393","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [14] -1222453795, BookDto(id=null, title=The Moon by Night, description=Comic/Graphic Novel, pageCount=10, excerpt=Mystery, publishDate=2025-06-29T09:19:20.381235560Z)",""
"passed","Sun Jun 29 09:19:11 UTC 2025","Sun Jun 29 09:19:12 UTC 2025","363","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [6]  , AuthorDto(id=null, idBook=485, firstName=Charlesetta, lastName=Kub)",""
"passed","Sun Jun 29 09:19:21 UTC 2025","Sun Jun 29 09:19:22 UTC 2025","362","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [20] @, BookDto(id=null, title=The Skull Beneath the Skin, description=Mystery, pageCount=766, excerpt=Fiction in verse, publishDate=2025-06-29T09:19:21.122474846Z)",""
"passed","Sun Jun 29 09:19:12 UTC 2025","Sun Jun 29 09:19:13 UTC 2025","349","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [8]  , AuthorDto(id=552, idBook=null, firstName=Maribel, lastName=Rau)",""
"passed","Sun Jun 29 09:19:22 UTC 2025","Sun Jun 29 09:19:22 UTC 2025","341","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [21] @, BookDto(id=318, title=null, description=Horror, pageCount=249, excerpt=Fairy tale, publishDate=2025-06-29T09:19:21.122520171Z)",""
"passed","Sun Jun 29 09:19:19 UTC 2025","Sun Jun 29 09:19:20 UTC 2025","363","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [10]  , BookDto(id=153, title=Down to a Sunless Sea, description=Folklore, pageCount=null, excerpt=Humor, publishDate=2025-06-29T09:19:19.318302046Z)",""
"passed","Sun Jun 29 09:19:17 UTC 2025","Sun Jun 29 09:19:17 UTC 2025","368","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [22] 1=1, AuthorDto(id=null, idBook=596, firstName=Caroll, lastName=Bahringer)",""
"passed","Sun Jun 29 09:19:21 UTC 2025","Sun Jun 29 09:19:21 UTC 2025","378","","BooksTests","","BooksTests","putBookExceptionalTest","PUT - update book with invalid payload and/or id [18] -1222453795, BookDto(id=446, title=Where Angels Fear to Tread, description=Suspense/Thriller, pageCount=359, excerpt=Fiction narrative, publishDate=null)",""
"broken","Sun Jun 29 09:19:15 UTC 2025","Sun Jun 29 09:19:16 UTC 2025","359","","AuthorTests","","AuthorTests","putAuthorExceptionalTest","PUT - update author with invalid payload [18] <script>alert(1)</script>, AuthorDto(id=null, idBook=563, firstName=Eleanora, lastName=McClure)",""
"passed","Sun Jun 29 09:19:10 UTC 2025","Sun Jun 29 09:19:10 UTC 2025","367","","BooksTests","","BooksTests","postBookExceptionalTest","POST - create book with invalid payload [6] BookDto(id=804, title=Dying of the Light, description=Mythopoeia, pageCount=744, excerpt=Classic, publishDate=null)",""
